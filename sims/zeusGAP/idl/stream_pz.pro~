function hdf, n, name

fileid = hdf_sd_start(name,/read)
sds = hdf_sd_select(fileid,n)
hdf_sd_getdata,sds,data

return, data

end

pro stream, loc=loc, start=start, finish=finish, azislice=azislice $
           ,xtickinterval=xtickinterval,length=length,red=red $
           , smallh=smallh, xrange=xrange, ytickinterval=ytickinterval $
           , yrange=yrange , direction=direction, hsize=hsize, vzonly=vzonly $
            ,vronly=vronly, log=log, plotrange0=plotrange0, ct=ct, arrcolor=arrcolor $
            , name=name, nopert=nopert
           
if not keyword_set(length) then length= 1.0
if not keyword_set(ct) then ct=5


;get the basic info
location =strcompress(loc,/remove_all)
if not keyword_set(basic) then begin
    filename = strcompress('hdfaa.000',/remove_all)
endif else begin
    name = string(basic,format='(I03)')
    filename = strcompress('hdfaa.'+name,/remove_all)
endelse
fileloc  = filepath(filename,root_dir='.',subdir=[location])


rad  = hdf(2, fileloc)
theta= hdf(1, fileloc)
phi  = hdf(0, fileloc)


nrad  = n_elements(rad)
ntheta= n_elements(theta)
nphi  = n_elements(phi)



if not keyword_set(red) then begin
  red = [nrad, ntheta]
endif


vx   = dblarr(nrad, ntheta)
vy   = dblarr(nrad, ntheta)

radnew=dblarr(nrad+2)
radnew(2:nrad+1) = rad(0:nrad-1)
radnew(0:1) = [0.0,rad(0)/2.0]


data_axisymmetric = dblarr(nrad, ntheta)
den2d = dblarr(nrad, ntheta)

data0   = hdf(19, fileloc);density field t=0

if keyword_set(basic) then begin
     for j=0, ntheta-1 do begin
         for i=0, nrad-1 do begin
             data_axisymmetric(i,j) = mean(data0(i,j,*))
         endfor
     endfor
      for k=0, nphi-1 do begin
         data0(*,*,k) = data_axisymmetric(*,*)
     endfor
endif

z1 = 1d0/(smallh*tan(theta))

if not keyword_set(finish) then finish = start

; planet info
nlines = file_lines(filepath('planetxy_hdf.dat',root_dir='.',subdir=[location]))
planetinfo = dblarr(7,nlines)
openr, 1, filepath('planetxy_hdf.dat',root_dir='.',subdir=[location])
readf,1,planetinfo
close,1
torb = 2d0*!dpi*planetinfo(1,0)^(3d0/2d0)

for n=start, finish do begin
    ks   = string(n,format='(I03)')
    filename = strcompress('hdfaa.'+ks,/remove_all)
    fileloc  = filepath(filename,root_dir='.',subdir=[location])
    
    den  = hdf(19, fileloc)
    vrad  = hdf(3, fileloc)
    vtheta= hdf(7, fileloc)

    vrad   *= den
    vtheta *= den

    
    plx=planetinfo(1,n)
    ply=planetinfo(2,n)
    plz=planetinfo(3,n)
    plrad = sqrt(plx^2 + ply^2 + plz^2)

    azi1 = azislice*nphi
    
    for j=0, ntheta-1 do begin
        for i=0, nrad-1 do begin

            sint = sin(theta(j))
            cost = cos(theta(j))
            
            
            vr = vrad(i,j,azi1)
            vt = vtheta(i,j,azi1)


           if keyword_set(vzonly) then begin
               vx(i,j) = 0.0
           endif else vx(i,j) = vr*sint + vt*cost

            if keyword_set(vronly) then begin
                vy(i,j) = 0.0
            endif else begin ;vy is cylindrical vert. vel. but plot in z/H, so want to divide by H
                vy(i,j) = vr*cost - sint*vt
                vy(i,j)/=smallh*rad(i)*sint ;R = r.sin\theta
            endelse

        endfor
    endfor
   
   if keyword_set(direction) then begin
       vmag = sqrt(vx*vx + vy*vy)
       vx /= vmag
       vy /= vmag
   endif

   
   if not keyword_set(nopert) then begin
      if not keyword_set(log) then den = den - data0
      den/=data0
   endif
   
   den2d(0:nrad-1,0:ntheta-1) = den(0:nrad-1,0:ntheta-1,azi1)
       
   if keyword_set(log) then den2d=alog10(den2d)
   
   if not keyword_set(plotrange0) then begin
      temp = min(abs(xrange(0) - rad(*)), r1)
      temp = min(abs(xrange(1) - rad(*)), r2)
      
      temp = min(abs(yrange(0) - z1), t2)
      temp = min(abs(yrange(1) - z1), t1)
      
      plotrange=[min(den2d(r1:r2,t1:t2)),max(den2d(r1:r2,t1:t2))]
      
   endif else plotrange=plotrange0
   levels=plotrange(0)+(plotrange(1)-plotrange(0))*(dindgen(48)/47.)


   time=string(planetinfo(0,n)/torb,format='(F7.2)')
   azislicestring = string(azislice,format='(F5.3)')
   name1 = azislicestring 
;   name2 = azislicestring(1)

   loadct, ct

   set_plot, 'ps'
   device, filename=filepath(strcompress('stream_'+ks+'.ps',/remove_all) $
                            ,root_dir='.',subdir=[location]) $
     , bits_per_pixel=8,xsize=18, ysize=9,/color

   ztemp = 1d0/(tan(theta)*smallh)

   contour, den2d, rad, ztemp , /fill $
      ,title=time+' orbits, '+textoidl('\phi/2\pi='+name1), levels=levels $ 
      ,ymargin=[3,3],xmargin=[7,10],xrange=xrange,yrange=yrange, xtickinterval=xtickinterval $
      , ytickinterval=ytickinterval,xtitle='R', ytitle=textoidl('z/H')

   colorbar, position=[0.88, 0.12, 0.93, 0.88],/vertical,/right,range=plotrange,format='(f5.2)'



   vx_small = congrid(vx, red(0), red(1))
   vy_small = congrid(vy, red(0), red(1))
   rad_small = congrid(rad, red(0))
   zaxis = congrid(1d0/(smallh*tan(theta)), red(1))

   temp = min(abs(rad_small - xrange(0)), r1)
   temp = min(abs(rad_small - xrange(1)), r2)
   temp = min(abs(zaxis - yrange(0)), t2)
   temp = min(abs(zaxis - yrange(1)), t1)

   r1 += 1
   r2 -= 1
  
   velovect2, vx_small(r1:r2,t1:t2), vy_small(r1:r2,t1:t2), rad_small(r1:r2), zaxis(t1:t2), color=arrcolor,/overplot $
     , length=length,/isotropic, hsize=hsize

    if keyword_set(name) then begin
        xyouts, xrange(1), 0.1, textoidl(name),charsize=1.5, charthick=6, color=255, alignment=1
    endif
 


device,/close


print, 'done '+ks
endfor
end
