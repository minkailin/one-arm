function hdf, n, name

fileid = hdf_sd_start(name,/read)
sds = hdf_sd_select(fileid,n)
hdf_sd_getdata,sds,data

return, data

end

function get_vorticity, vrad, vtheta, vphi, rad, theta, phi
nrad = n_elements(rad)
ntheta = n_elements(theta)
nphi = n_elements(phi)

dvphi_sintheta = vphi
dvtheta = vtheta

;get omega_r*cos(theta)
for i=0, nrad-1 do begin
    for k=0, nphi-1 do begin
	dvphi_sintheta(i,*,k) = deriv(theta(*), vphi(i,*,k)*sin(theta(*)))
        dvphi_sintheta(i,*,k) /= rad(i)*tan(theta(*))
    endfor
    
    for j=0, ntheta-1 do begin
	dvtheta(i,j,*) = deriv(phi(*), vtheta(i,j,*)) 
        dvtheta(i,j,*) /= rad(i)*tan(theta(j))
    endfor
endfor
omegar = dvphi_sintheta - dvtheta

;get omega_theta*sin(theta) !factors involving sin(theta) in the expression for the curl is absorbed with pre-factor sin(theta) here
dvrad = vrad
dr_vphi = vphi

for j=0, ntheta-1 do begin
	for i=0, nrad-1 do begin
          dvrad(i,j,*) = deriv(phi(*), vrad(i,j,*))/rad(i)
        endfor
     
    for k=0, nphi-1 do begin
        dr_vphi(*,j,k) = deriv(rad(*), rad(*)*vphi(*,j,k))
        dr_vphi(*,j,k) *= sin(theta(j))/rad(*)
    endfor
endfor
omegatheta = dvrad - dr_vphi

omegaz = omegar - omegatheta ; geometric factors already incoroporated. 

return, omegaz
end

pro vort_xy, loc=loc, start=start, finish=finish, zslice=zslice $
             ,vertavg=vertavg, log=log, plotrange0=plotrange0 $
             ,xtickinterval=xtickinterval, nopert=nopert, xrange=xrange,yrange=yrange $
             , basic=basic, mp=mp, name=name, vorten=vorten $
             , absolute=absolute, scale=scale,inv=inv, aziline=aziline
  
;get the basic info
location =strcompress(loc,/remove_all)
if not keyword_set(scale) then scale=1.0
if not keyword_set(basic) then begin
    filename = strcompress('hdfaa.000',/remove_all)
endif else begin
    name = string(basic,format='(I03)')
    filename = strcompress('hdfaa.'+name,/remove_all)
endelse
fileloc  = filepath(filename,root_dir='.',subdir=[location])

rad  = hdf(2, fileloc)
theta= hdf(1, fileloc)
phi  = hdf(0, fileloc)

nrad  = n_elements(rad)
ntheta= n_elements(theta)
nphi  = n_elements(phi)


angle = dblarr(nphi)

; assume uniform theta and phi spacing

dtheta = theta(1) - theta(0)
dphi = phi(1) - phi(0)

data_axisymmetric = dblarr(nrad, ntheta)
data2d = dblarr(nrad, nphi)
dataplot=dblarr(nrad, nphi)
data1d = dblarr(nrad)

vphi0   = hdf(11, fileloc)
den0   = hdf(19, fileloc)

;
; TAKE AZI-AVERAGE FIRST!!!
;

vrad0 = dblarr(nrad, ntheta, nphi)
vtheta0 = dblarr(nrad, ntheta, nphi)

for k=0, nphi-1 do begin
      vphi0(*,*,k) = vphi0(*,*,10)
      den0(*,*,k) = den0(*,*,10)
endfor



data0 = get_vorticity(vrad0, vtheta0, vphi0, rad, theta, phi)

if keyword_set(vorten) then data0 /= den0
if keyword_set(inv) then data0 = 1d0/(data0)
if keyword_set(basic) then begin
   ;; for j=0, ntheta-1 do begin
   ;;    for i=0, nrad-1 do begin
   ;;       data_axisymmetric(i,j) = mean(data0(i,j,*))
   ;;    endfor
   ;; endfor
   for k=0, nphi-1 do begin
      data0(*,*,k) = data0(*,*,10)
   endfor
endif


if not keyword_set(finish) then finish = start

; planet info
nlines = file_lines(filepath('planetxy_hdf.dat',root_dir='.',subdir=[location]))
planetinfo = dblarr(7,nlines)
openr, 1, filepath('planetxy_hdf.dat',root_dir='.',subdir=[location])
readf,1,planetinfo
close,1
torb = 2d0*!dpi*planetinfo(1,0)^(3d0/2d0)


for n=start, finish do begin
    ks   = string(n,format='(I03)')
    filename = strcompress('hdfaa.'+ks,/remove_all)
    fileloc  = filepath(filename,root_dir='.',subdir=[location])

    vrad   = hdf(3, fileloc)
    vtheta   = hdf(7, fileloc)
    vphi   = hdf(11, fileloc)
    den   = hdf(19, fileloc)
    
    data = get_vorticity(vrad, vtheta, vphi, rad, theta, phi)
    if keyword_set(vorten) then data /= den 
    if keyword_set(inv) then data = 1d0/(data)

    plx=planetinfo(1,n)
    ply=planetinfo(2,n)
    plz=planetinfo(3,n)
    phiplt = pltphi(plx,ply)
    plrad = sqrt(plx^2 + ply^2 + plz^2)
    rhill = plrad*(mp/3d0)^(1d0/3d0)
    rplot = (rad - plrad)/rhill

    if not keyword_set(nopert) then begin
        if not keyword_set(log) then data = data - data0
        data/=data0
    endif
    
    if keyword_set(zslice) then begin   
        nzslice = zslice*ntheta
;        height = tan(!dpi/2d0 - theta(nzslice))/smallh
        data2d(0:nrad-1,0:nphi-1) = data(0:nrad-1,nzslice,0:nphi-1)
    endif
    
    if keyword_set(vertavg) then begin
       for i=0, nrad-1 do begin
            for k = 0, nphi-1 do begin
                data2d(i,k) = mean(data(i,*,k))
             endfor
            data1d(i) = mean(data2d(i,*))
         endfor
    endif
    
    if keyword_set(absolute) then data2d = abs(data2d)
    if keyword_set(log) then data2d=alog10(data2d)
    data2d *= scale


    if not keyword_set(plotrange0) then begin
         temp = min(abs(rplot - xrange(0)),r1)
    temp = min(abs(rplot - xrange(1)),r2)
    plotrange=[min(data2d(r1:r2,*)),max(data2d(r1:r2,*))]
    endif else plotrange=plotrange0

    levels=plotrange(0)+(plotrange(1)-plotrange(0))*(dindgen(48)/47.)
    time=string(planetinfo(0,n)/torb,format='(F7.2)')

    if(phiplt gt !dpi) then begin
        temp2=min(abs(phi-(phiplt-!dpi)),grid2)
        dataplot(0:nrad-1,0:nphi-1-grid2) = data2d(0:nrad-1,grid2:nphi-1)
        dataplot(0:nrad-1,nphi-grid2:nphi-1) = data2d(0:nrad-1, 0:grid2-1)
    endif
    if(phiplt lt !dpi) then begin
        temp2=min(abs(phi-(phiplt+!dpi)),grid2)
        dataplot(0:nrad-1,nphi-grid2:nphi-1) = data2d(0:nrad-1,0:grid2-1)
        dataplot(0:nrad-1,0:nphi-1-grid2) = data2d(0:nrad-1, grid2:nphi-1)
    endif
    if(phiplt eq !dpi) then dataplot = data2d



    loadct, 5, bottom=0
    
    set_plot, 'ps'
    device, filename=filepath(strcompress('vortxy_'+ks+'.ps',/remove_all),root_dir='.',subdir=[location])$
            ,/color, bits_per_pixel=8,xsize=12, ysize=14
    contour,dataplot,rplot,phi/!dpi - 1.0 ,/fill,levels=levels,title=time+textoidl('P_0, ')+ $
            textoidl('r_p='+string(plrad,format='(f5.2)')), xstyle=2, $
            xtitle=textoidl('(r-r_p)/r_h'), ytitle=textoidl('(\phi-\phi_p)/\pi'),charsize=1.5,xmargin=[7.0,6.0], ymargin=[3.5,2], $
            xtickinterval=xtickinterval,xrange=xrange, yrange=yrange, xminor=4
    colorbar, position=[0.851, 0.15, 0.90, 0.90],/vertical,/right,range=plotrange,format='(f5.2)'
    oplot,[0,0],[0.0,0.0]/!dpi,psym=7,symsize=1.5,color=!D.Table_size*1.1


    if keyword_set(aziline) then begin
       for j=0, n_elements(aziline)-1 do begin
          oplot,[-1,1]*1d2,[aziline(j),aziline(j)], color=!D.Table_size, thick=4
          print, 'azislice=', (aziline(j)*!dpi + phiplt)/(2d0*!dpi)
       endfor
    endif
    
   if keyword_set(name) then begin
        xyouts, xrange(1), -0.95, textoidl(name),charsize=1.5, charthick=6, color=255, align=1
    endif 
   device,/close

   print, 'done '+ks
endfor
end
